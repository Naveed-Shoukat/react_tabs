{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","useMemo","find","tab","id","handelOnTabClick","useCallback","className","map","classNames","href","onClick","title","content","App","React","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"2NAeaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcC,mBAClB,kBAAMJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,OAClC,CAACA,KACED,EAAK,GAEJQ,EAAmBC,uBACvB,SAACH,GACKA,EAAIC,KAAOJ,EAAYI,IACzBL,EAAcI,KAGlB,CAACH,IAGH,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAL,GAAG,OACX,oBAEEI,UAAWE,IAAW,CAAE,YAAaN,EAAIC,KAAOJ,EAAYI,KAC5D,UAAQ,MAHV,SAKE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAAMN,EAAiBF,IAHlC,SAKGA,EAAIS,SATFT,EAAIC,WAgBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGP,EAAYa,cCnDRhB,EAAO,CAClB,CAAEO,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,IAAMC,SAASnB,EAAK,IAA1D,mBAAOG,EAAP,KAAoBiB,EAApB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBP,EAAYY,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeE,EAAYI,GAC3BL,cAbqB,SAACI,GAC1Bc,EAAed,UCbnBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.89843ad9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\n\nexport type TabType = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  tabs: TabType[],\n  selectedTabId: string,\n  onTabSelected: (tab: TabType) => void\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = useMemo(\n    () => tabs.find(tab => tab.id === selectedTabId),\n    [selectedTabId],\n  ) || tabs[0];\n\n  const handelOnTabClick = useCallback(\n    (tab: TabType) => {\n      if (tab.id !== selectedTab.id) {\n        onTabSelected(tab);\n      }\n    },\n    [selectedTab],\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({ 'is-active': tab.id === selectedTab.id })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handelOnTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs, TabType } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = React.useState(tabs[0]);\n\n  const handleTabSelection = (tab: TabType) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={handleTabSelection}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}